1.Select COUNT(*) NumberOfStudents from Student where course_start_Date between '2019-01-01' and '2019-03-20';
2.Select top 3 * from Student;
3.Select  * from (SELECT ROW_NUMBER() OVER(order by s.StudentId) AS Row_Num,s.* FROM Student s) Student where Row_Num=5;
4.Select  * from (SELECT ROW_NUMBER() OVER(order by s.StudentId) AS Num,s.* FROM Student s) Student where Num>3;
5.Select * from Student where course_start_Date=(select Min(course_start_Date) from Student where course_start_Date between '2019-02-01' and '2019-02-28');
6.Select * from Course where FeeStructure=(select min(FeeStructure) from Course);
7.Select * from Course where FeeStructure=(select max(FeeStructure) from Course);
8.select Count(module_No) as Number_Of_Modules from Module where course_Id=11;
9.select c.CourseName,count(s.module_No) as Number_Of_Modules from Module s,Course c where c.CourseId=s.course_Id group by c.CourseName;
10.select count(s.StudentId) as Number_Of_Trainees from Student s where s.CourseId=11;
11.select c.CourseName,count(s.StudentId)/2 as Total_Number_Of_Trainees from Student s,Course c,Module m where s.courseId=c.CourseId and c.CourseId=m.course_Id group by    c.CourseName;
12.select c.CourseName,count(s.StudentId)/2 as Total_Number_Of_Trainees from Student s,Course c,Module m where s.courseId=c.CourseId and c.CourseId=m.course_Id group by    c.CourseName having (count(s.StudentId)/2)>2;
13.select s.StudentId,s.StudentName,sum(c.StudentScores) as Total_Score from Student s, Score c where s.StudentId=c.StudentId group by s.StudentId,s.StudentName;
14.select ModuleNo,StudentScores from  Score  where ModuleNo=1;

MULTIPLE TABLES

1--->select Student.studentId,Student.studentName,Course.CourseName from Student join Course on Student.courseId=Course.CourseId;

2--->select Module.*,Course.CourseName from Course join Module on Course.CourseId=Module.course_Id ;

3--> select Module.* from Module inner join Course on  Course.CourseName='Html' and Module.course_Id=Course.CourseId;
                                                         (OR)
3---> select Module.module_No,Module.module_Name from Course join Module on Module.course_Id=12 and Course.CourseId=Module.course_Id;

4--->select  Student.studentName,Score.* from Module join Score  on Module.module_Name='Core Java' and Module.module_no=Score.ModuleNo join Student on       Student.studentId=Score.StudentId;

5--->  select Score.StudentId,Student.StudentName,Score.ModuleNo,Score.StudentScores from Score join Module  on Module.course_Id=11 and Module.module_no=Score.ModuleNo left        join Student on   Score.StudentId=Student.StudentId;
                                                                (OR)

5--> select Score.StudentId,Score.Courseid,Course.CourseName,sum(Score.StudentScores) as Total_Score from Course join Score  
     on  Course.CourseId=Score.Courseid and Course.CourseName='Html' group by Score.Courseid,Score.StudentId,Course.CourseName;

6--->select top 1 Student.StudentId,Student.StudentName,max(Score.StudentScores) as Top_Score from Student left join Module on Student.CourseId=Module.course_Id  join           Course on Course.CourseId=12 and Module.module_No=3 join Score on Student.StudentId=Score.StudentId group by Student.StudentId,Student.StudentName;

8--->select Course.CourseId,Student.StudentId,Student.StudentName,Module.module_No,Course.CourseName,Course.CourseDuration,Score.StudentScores from Student join               Score on Student.StudentId=124 join Course on Student.CourseId=Course.CourseId and Score.Courseid=Course.CourseId join Module on Score.ModuleNo=Module.module_No;

9--->select Student.*,DATEdiff(DAY,student.course_start_Date,'2019-02-21') as No_Of_Days from Student;
                         (OR)
9--->select Student.*,DATEDIFF(DAY,student.course_start_Date,'2019-02-21') as Placement_Support_Availability_Days from Student where (DATEDIFF     (DAY,student.course_start_Date,'2019-02-21')) <= 60;



7-------> USING VIEW

CREATE view course_Score
AS
 (select Student.studentId,Student.studentName,Score.Courseid,sum(Score.StudentScores) as score_In_Course from Score join Student on Student.studentId=Score.StudentId 
 left join Course on Course.CourseId=Score.Courseid  and
Score.StudentScores  in ( 
select
case  Courseid  when  11 then 
                            (select sum(StudentScores)  from Score) 
				  when  13 then  
				            (select sum(StudentScores)  from Score) 
				  when  12 then 
				            (select sum(StudentScores)  from Score) 	
				  when  14 then 
				            (select sum(StudentScores)  from Score)
else  (select sum(StudentScores)  from Score) 
	  
end				 
   from Score) group by Student.studentId,Student.studentName,Score.Courseid);
  go


QUERY:

select 
studentId,studentName,
  Courseid, 
  score_In_Course as Top_Score_In_Course 

from 
  (
 select course_Score.studentId,
course_Score.studentName,
course_Score.Courseid,course_Score.score_In_Course, row_number() over (
partition by course_Score.Courseid 
    order by 
course_Score.score_In_Course desc
) as rowno 
 from 
  course_Score 
   -- where 
  -- course_Score.Courseid = 12
 ) as Temp where rowno=1;

